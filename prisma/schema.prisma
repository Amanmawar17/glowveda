// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Supabase connection string
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  address   String?
  cart      Cart[]
  wishlist  Wishlist[]
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String?
  stock       Int         @default(0)
  wishlist    Wishlist[]
  cart        Cart[]
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Cart {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, productId]) // Each user can have only one entry per product in cart
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())

  @@unique([userId, productId]) // Each user can only wishlist a product once
}

model Order {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      Int
  orderItems  OrderItem[]
  totalAmount Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1)
  price     Float
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELED
}
